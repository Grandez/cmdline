{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cmdline_exceptions.cpp\par \pard\plain 
{\tc\tcl2 \v cmdline_exceptions.cpp}
{\xe \v cmdline_exceptions.cpp}
{\bkmkstart AAAAAAACBJ}
{\bkmkend AAAAAAACBJ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAACBK}{\bkmkend AAAAAAACBK}
00001 {\cf21 #include <iostream>}\par
{\bkmkstart AAAAAAACBL}{\bkmkend AAAAAAACBL}
00002 {\cf21 #include <cstdarg>}\par
{\bkmkstart AAAAAAACBM}{\bkmkend AAAAAAACBM}
00003 {\cf21 #include <cstring>}\par
{\bkmkstart AAAAAAACBN}{\bkmkend AAAAAAACBN}
00004 {\cf21 #include <cstdio>}\par
{\bkmkstart AAAAAAACBO}{\bkmkend AAAAAAACBO}
00005 {\cf21 #include <filesystem>}\par
{\bkmkstart AAAAAAACBP}{\bkmkend AAAAAAACBP}
00006 {\cf21 #include "msg_locale.hpp"}\par
{\bkmkstart AAAAAAACBQ}{\bkmkend AAAAAAACBQ}
00007 {\cf21 #include "types.hpp"}\par
{\bkmkstart AAAAAAACBR}{\bkmkend AAAAAAACBR}
00008 {\cf21 #include "cmdline_exceptions.hpp"}\par
{\bkmkstart AAAAAAACBS}{\bkmkend AAAAAAACBS}
00009 \par
{\bkmkstart AAAAAAACBT}{\bkmkend AAAAAAACBT}
00010 {\cf21 #ifdef _WIN32}\par
{\bkmkstart AAAAAAACBU}{\bkmkend AAAAAAACBU}
00011 {\cf21 #pragma warning( disable : 4996)}\par
{\bkmkstart AAAAAAACBV}{\bkmkend AAAAAAACBV}
00012 {\cf21 #endif}\par
{\bkmkstart AAAAAAACBW}{\bkmkend AAAAAAACBW}
00013 \par
{\bkmkstart AAAAAAACBX}{\bkmkend AAAAAAACBX}
00014 {\cf17 namespace }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 cmdline}}}
 \{\par
{\bkmkstart AAAAAAACBY}{\bkmkend AAAAAAACBY}
00015     {\cf17 static} std::string mountMessage({\cf17 const} {\cf18 char}* fmt, va_list list) \{\par
{\bkmkstart AAAAAAACBZ}{\bkmkend AAAAAAACBZ}
00016         {\cf18 char} t[255];\par
{\bkmkstart AAAAAAACCA}{\bkmkend AAAAAAACCA}
00017         std::vsprintf(t, fmt, list);\par
{\bkmkstart AAAAAAACCB}{\bkmkend AAAAAAACCB}
00018         {\cf19 return} std::string(t);\par
{\bkmkstart AAAAAAACCC}{\bkmkend AAAAAAACCC}
00019     \}\par
{\bkmkstart AAAAAAACCD}{\bkmkend AAAAAAACCD}
00020     CmdLineException::CmdLineException({\cf18 char}* txt) : invalid_argument(txt) \{\};\par
{\bkmkstart AAAAAAACCE}{\bkmkend AAAAAAACCE}
00021     CmdLineException::CmdLineException({\cf17 const} {\cf18 char}* fmt, ...) : invalid_argument({\cf22 ""}) \{\par
{\bkmkstart AAAAAAACCF}{\bkmkend AAAAAAACCF}
00022         va_list args;\par
{\bkmkstart AAAAAAACCG}{\bkmkend AAAAAAACCG}
00023         va_start(args, fmt);\par
{\bkmkstart AAAAAAACCH}{\bkmkend AAAAAAACCH}
00024         std::string txt = mountMessage(fmt, args);\par
{\bkmkstart AAAAAAACCI}{\bkmkend AAAAAAACCI}
00025         this->invalid_argument::~invalid_argument();\par
{\bkmkstart AAAAAAACCJ}{\bkmkend AAAAAAACCJ}
00026         {\cf17 new} ({\cf17 this}) invalid_argument(txt); {\cf20 //}\par
{\bkmkstart AAAAAAACCK}{\bkmkend AAAAAAACCK}
00027     \}\par
{\bkmkstart AAAAAAACCL}{\bkmkend AAAAAAACCL}
00028     CmdLineParameterException::CmdLineParameterException({\cf17 const} {\cf18 char}* fmt, ...) \{\par
{\bkmkstart AAAAAAACCM}{\bkmkend AAAAAAACCM}
00029         va_list args;\par
{\bkmkstart AAAAAAACCN}{\bkmkend AAAAAAACCN}
00030         va_start(args, fmt);\par
{\bkmkstart AAAAAAACCO}{\bkmkend AAAAAAACCO}
00031         std::string txt = mountMessage(fmt, args);\par
{\bkmkstart AAAAAAACCP}{\bkmkend AAAAAAACCP}
00032         this->CmdLineException::~CmdLineException(); {\cf20 // destroy the base class}\par
{\bkmkstart AAAAAAACCQ}{\bkmkend AAAAAAACCQ}
00033         {\cf17 new} ({\cf17 this}) CmdLineException(({\cf18 char}*)txt.c_str()); {\cf20 //}\par
{\bkmkstart AAAAAAACCR}{\bkmkend AAAAAAACCR}
00034     \}\par
{\bkmkstart AAAAAAACCS}{\bkmkend AAAAAAACCS}
00035     CmdLineValueException::CmdLineValueException({\cf17 const} {\cf18 char}* fmt, ...) \{\par
{\bkmkstart AAAAAAACCT}{\bkmkend AAAAAAACCT}
00036         va_list args;\par
{\bkmkstart AAAAAAACCU}{\bkmkend AAAAAAACCU}
00037         va_start(args, fmt);\par
{\bkmkstart AAAAAAACCV}{\bkmkend AAAAAAACCV}
00038         std::string txt = mountMessage(fmt, args);\par
{\bkmkstart AAAAAAACCW}{\bkmkend AAAAAAACCW}
00039         this->CmdLineException::~CmdLineException(); {\cf20 // destroy the base class}\par
{\bkmkstart AAAAAAACCX}{\bkmkend AAAAAAACCX}
00040         {\cf17 new} ({\cf17 this}) CmdLineException(({\cf18 char}*)txt.c_str()); {\cf20 //}\par
{\bkmkstart AAAAAAACCY}{\bkmkend AAAAAAACCY}
00041     \}\par
{\bkmkstart AAAAAAACCZ}{\bkmkend AAAAAAACCZ}
00042     CmdLineDuplicateArgumentException::CmdLineDuplicateArgumentException({\cf17 const} {\cf18 char}* fmt, ...) \{\par
{\bkmkstart AAAAAAACDA}{\bkmkend AAAAAAACDA}
00043         va_list args;\par
{\bkmkstart AAAAAAACDB}{\bkmkend AAAAAAACDB}
00044         va_start(args, fmt);\par
{\bkmkstart AAAAAAACDC}{\bkmkend AAAAAAACDC}
00045         std::string txt = mountMessage(fmt, args);\par
{\bkmkstart AAAAAAACDD}{\bkmkend AAAAAAACDD}
00046         this->CmdLineException::~CmdLineException(); {\cf20 // destroy the base class}\par
{\bkmkstart AAAAAAACDE}{\bkmkend AAAAAAACDE}
00047         {\cf17 new} ({\cf17 this}) CmdLineException(({\cf18 char}*)txt.c_str()); {\cf20 //}\par
{\bkmkstart AAAAAAACDF}{\bkmkend AAAAAAACDF}
00048     \}\par
{\bkmkstart AAAAAAACDG}{\bkmkend AAAAAAACDG}
00049     CmdLineNotFoundException::CmdLineNotFoundException({\cf17 const} {\cf18 char}* fmt, ...) : std::runtime_error({\cf22 "unchecked"}) \{\par
{\bkmkstart AAAAAAACDH}{\bkmkend AAAAAAACDH}
00050         va_list args;\par
{\bkmkstart AAAAAAACDI}{\bkmkend AAAAAAACDI}
00051         va_start(args, fmt);\par
{\bkmkstart AAAAAAACDJ}{\bkmkend AAAAAAACDJ}
00052         std::string txt = mountMessage(fmt, args);\par
{\bkmkstart AAAAAAACDK}{\bkmkend AAAAAAACDK}
00053         this->runtime_error::~runtime_error(); {\cf20 // destroy the base class}\par
{\bkmkstart AAAAAAACDL}{\bkmkend AAAAAAACDL}
00054         {\cf17 new} ({\cf17 this}) runtime_error(({\cf18 char}*)txt.c_str()); {\cf20 //}\par
{\bkmkstart AAAAAAACDM}{\bkmkend AAAAAAACDM}
00055     \}\par
{\bkmkstart AAAAAAACDN}{\bkmkend AAAAAAACDN}
00056     CmdLineInvalidTypeException::CmdLineInvalidTypeException({\cf17 const} {\cf18 char}* fmt, ...) : std::runtime_error({\cf22 "unchecked"}) \{\par
{\bkmkstart AAAAAAACDO}{\bkmkend AAAAAAACDO}
00057         va_list args;\par
{\bkmkstart AAAAAAACDP}{\bkmkend AAAAAAACDP}
00058         va_start(args, fmt);\par
{\bkmkstart AAAAAAACDQ}{\bkmkend AAAAAAACDQ}
00059         std::string txt = mountMessage(fmt, args);\par
{\bkmkstart AAAAAAACDR}{\bkmkend AAAAAAACDR}
00060         this->runtime_error::~runtime_error(); {\cf20 // destroy the base class}\par
{\bkmkstart AAAAAAACDS}{\bkmkend AAAAAAACDS}
00061         {\cf17 new} ({\cf17 this}) runtime_error(({\cf18 char}*)txt.c_str()); {\cf20 //}\par
{\bkmkstart AAAAAAACDT}{\bkmkend AAAAAAACDT}
00062     \}\par
{\bkmkstart AAAAAAACDU}{\bkmkend AAAAAAACDU}
00063         HelpRequested::HelpRequested({\cf17 const} {\cf18 char} *programName, {\cf17 const} {\cf18 char} *txt, {\cf18 bool} detailed\par
{\bkmkstart AAAAAAACDV}{\bkmkend AAAAAAACDV}
00064                                      , std::unordered_map<std::string, bool> flags\par
{\bkmkstart AAAAAAACDW}{\bkmkend AAAAAAACDW}
00065                                      , std::unordered_map<std::string, string> options)\par
{\bkmkstart AAAAAAACDX}{\bkmkend AAAAAAACDX}
00066 \par
{\bkmkstart AAAAAAACDY}{\bkmkend AAAAAAACDY}
00067         : CmdLineException(txt) \{\par
{\bkmkstart AAAAAAACDZ}{\bkmkend AAAAAAACDZ}
00068         filesystem::path fs(programName);\par
{\bkmkstart AAAAAAACEA}{\bkmkend AAAAAAACEA}
00069         this->name = strdup(fs.filename().string().c_str());\par
{\bkmkstart AAAAAAACEB}{\bkmkend AAAAAAACEB}
00070         this->detailed = detailed;\par
{\bkmkstart AAAAAAACEC}{\bkmkend AAAAAAACEC}
00071         this->flags   =  flags;\par
{\bkmkstart AAAAAAACED}{\bkmkend AAAAAAACED}
00072         this->options = options;\par
{\bkmkstart AAAAAAACEE}{\bkmkend AAAAAAACEE}
00073     \};\par
{\bkmkstart AAAAAAACEF}{\bkmkend AAAAAAACEF}
00074      HelpRequested::~HelpRequested() \{\par
{\bkmkstart AAAAAAACEG}{\bkmkend AAAAAAACEG}
00075          cout << {\cf22 "delete HelpRequested\\n"};\par
{\bkmkstart AAAAAAACEH}{\bkmkend AAAAAAACEH}
00076          free(({\cf18 void} *) name);\par
{\bkmkstart AAAAAAACEI}{\bkmkend AAAAAAACEI}
00077      \}\par
{\bkmkstart AAAAAAACEJ}{\bkmkend AAAAAAACEJ}
00078     HelpSimpleRequested::HelpSimpleRequested( {\cf18 char}* programName\par
{\bkmkstart AAAAAAACEK}{\bkmkend AAAAAAACEK}
00079                                              ,unordered_map<string,bool> flags  \par
{\bkmkstart AAAAAAACEL}{\bkmkend AAAAAAACEL}
00080                                              ,unordered_map<string,string> options)       \par
{\bkmkstart AAAAAAACEM}{\bkmkend AAAAAAACEM}
00081                         : HelpRequested(programName, TXT_HELP, false, flags, options) \{\};\par
{\bkmkstart AAAAAAACEN}{\bkmkend AAAAAAACEN}
00082     HelpDetailedRequested::HelpDetailedRequested( {\cf17 const} {\cf18 char} *programName\par
{\bkmkstart AAAAAAACEO}{\bkmkend AAAAAAACEO}
00083                                                  ,unordered_map<string,bool> flags  \par
{\bkmkstart AAAAAAACEP}{\bkmkend AAAAAAACEP}
00084                                                  ,unordered_map<string,string> options)\par
{\bkmkstart AAAAAAACEQ}{\bkmkend AAAAAAACEQ}
00085                          : HelpRequested(programName, TXT_HELP_DETAIL, true, flags, options) \{\};\par
{\bkmkstart AAAAAAACER}{\bkmkend AAAAAAACER}
00086 \}\par
{\bkmkstart AAAAAAACES}{\bkmkend AAAAAAACES}
00087 \par
}
}