{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest-test-part.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.4/build/native/include/gtest/gtest-test-part.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.4/build/native/include/gtest/gtest-test-part.h}
{\bkmkstart AAAAAAALJC}
{\bkmkend AAAAAAALJC}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAALJD" }{}}{\fldrslt {\cs37\ul\cf2 Go to the documentation of this file.}}}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAALJE}{\bkmkend AAAAAAALJE}
00001 {\cf20 // Copyright 2008, Google Inc.}\par
{\bkmkstart AAAAAAALJF}{\bkmkend AAAAAAALJF}
00002 {\cf20 // All rights reserved.}\par
{\bkmkstart AAAAAAALJG}{\bkmkend AAAAAAALJG}
00003 {\cf20 //}\par
{\bkmkstart AAAAAAALJH}{\bkmkend AAAAAAALJH}
00004 {\cf20 // Redistribution and use in source and binary forms, with or without}\par
{\bkmkstart AAAAAAALJI}{\bkmkend AAAAAAALJI}
00005 {\cf20 // modification, are permitted provided that the following conditions are}\par
{\bkmkstart AAAAAAALJJ}{\bkmkend AAAAAAALJJ}
00006 {\cf20 // met:}\par
{\bkmkstart AAAAAAALJK}{\bkmkend AAAAAAALJK}
00007 {\cf20 //}\par
{\bkmkstart AAAAAAALJL}{\bkmkend AAAAAAALJL}
00008 {\cf20 //     * Redistributions of source code must retain the above copyright}\par
{\bkmkstart AAAAAAALJM}{\bkmkend AAAAAAALJM}
00009 {\cf20 // notice, this list of conditions and the following disclaimer.}\par
{\bkmkstart AAAAAAALJN}{\bkmkend AAAAAAALJN}
00010 {\cf20 //     * Redistributions in binary form must reproduce the above}\par
{\bkmkstart AAAAAAALJO}{\bkmkend AAAAAAALJO}
00011 {\cf20 // copyright notice, this list of conditions and the following disclaimer}\par
{\bkmkstart AAAAAAALJP}{\bkmkend AAAAAAALJP}
00012 {\cf20 // in the documentation and/or other materials provided with the}\par
{\bkmkstart AAAAAAALJQ}{\bkmkend AAAAAAALJQ}
00013 {\cf20 // distribution.}\par
{\bkmkstart AAAAAAALJR}{\bkmkend AAAAAAALJR}
00014 {\cf20 //     * Neither the name of Google Inc. nor the names of its}\par
{\bkmkstart AAAAAAALJS}{\bkmkend AAAAAAALJS}
00015 {\cf20 // contributors may be used to endorse or promote products derived from}\par
{\bkmkstart AAAAAAALJT}{\bkmkend AAAAAAALJT}
00016 {\cf20 // this software without specific prior written permission.}\par
{\bkmkstart AAAAAAALJU}{\bkmkend AAAAAAALJU}
00017 {\cf20 //}\par
{\bkmkstart AAAAAAALJV}{\bkmkend AAAAAAALJV}
00018 {\cf20 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
{\bkmkstart AAAAAAALJW}{\bkmkend AAAAAAALJW}
00019 {\cf20 // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
{\bkmkstart AAAAAAALJX}{\bkmkend AAAAAAALJX}
00020 {\cf20 // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR}\par
{\bkmkstart AAAAAAALJY}{\bkmkend AAAAAAALJY}
00021 {\cf20 // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT}\par
{\bkmkstart AAAAAAALJZ}{\bkmkend AAAAAAALJZ}
00022 {\cf20 // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,}\par
{\bkmkstart AAAAAAALKA}{\bkmkend AAAAAAALKA}
00023 {\cf20 // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT}\par
{\bkmkstart AAAAAAALKB}{\bkmkend AAAAAAALKB}
00024 {\cf20 // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,}\par
{\bkmkstart AAAAAAALKC}{\bkmkend AAAAAAALKC}
00025 {\cf20 // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY}\par
{\bkmkstart AAAAAAALKD}{\bkmkend AAAAAAALKD}
00026 {\cf20 // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT}\par
{\bkmkstart AAAAAAALKE}{\bkmkend AAAAAAALKE}
00027 {\cf20 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE}\par
{\bkmkstart AAAAAAALKF}{\bkmkend AAAAAAALKF}
00028 {\cf20 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.}\par
{\bkmkstart AAAAAAALKG}{\bkmkend AAAAAAALKG}
00029 {\cf20 //}\par
{\bkmkstart AAAAAAALKH}{\bkmkend AAAAAAALKH}
00030 {\cf20 // GOOGLETEST_CM0001 DO NOT DELETE}\par
{\bkmkstart AAAAAAALKI}{\bkmkend AAAAAAALKI}
00031 \par
{\bkmkstart AAAAAAALKJ}{\bkmkend AAAAAAALKJ}
00032 {\cf21 #ifndef GTEST_INCLUDE_GTEST_GTEST_TEST_PART_H_}\par
{\bkmkstart AAAAAAALKK}{\bkmkend AAAAAAALKK}
00033 {\cf21 #define GTEST_INCLUDE_GTEST_GTEST_TEST_PART_H_}\par
{\bkmkstart AAAAAAALKL}{\bkmkend AAAAAAALKL}
00034 \par
{\bkmkstart AAAAAAALKM}{\bkmkend AAAAAAALKM}
00035 {\cf21 #include <iosfwd>}\par
{\bkmkstart AAAAAAALKN}{\bkmkend AAAAAAALKN}
00036 {\cf21 #include <vector>}\par
{\bkmkstart AAAAAAALKO}{\bkmkend AAAAAAALKO}
00037 {\cf21 #include "{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAHDS" }{}}{\fldrslt {\cs37\ul\cf2 gtest/internal/gtest-internal.h}}}
"}\par
{\bkmkstart AAAAAAALKP}{\bkmkend AAAAAAALKP}
00038 {\cf21 #include "{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAALKQ" }{}}{\fldrslt {\cs37\ul\cf2 gtest/internal/gtest-string.h}}}
"}\par
{\bkmkstart AAAAAAALKR}{\bkmkend AAAAAAALKR}
00039 \par
{\bkmkstart AAAAAAALKS}{\bkmkend AAAAAAALKS}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAALKT" }{}}{\fldrslt {\cs37\ul\cf2 00040}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAALKT" }{}}{\fldrslt {\cs37\ul\cf2 GTEST_DISABLE_MSC_WARNINGS_PUSH_}}}
(4251 \\\par
{\bkmkstart AAAAAAALKU}{\bkmkend AAAAAAALKU}
00041 {\cf20 /* class A needs to have dll-interface to be used by clients of class B */})\par
{\bkmkstart AAAAAAALKV}{\bkmkend AAAAAAALKV}
00042 \par
{\bkmkstart AAAAAAALKW}{\bkmkend AAAAAAALKW}
00043 namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAFZQ" }{}}{\fldrslt {\cs37\ul\cf2 testing}}}
 \{\par
{\bkmkstart AAAAAAALKX}{\bkmkend AAAAAAALKX}
00044 \par
{\bkmkstart AAAAAAALKY}{\bkmkend AAAAAAALKY}
00045 {\cf20 // A copyable object representing the result of a test part (i.e. an}\par
{\bkmkstart AAAAAAALKZ}{\bkmkend AAAAAAALKZ}
00046 {\cf20 // assertion or an explicit FAIL(), ADD_FAILURE(), or SUCCESS()).}\par
{\bkmkstart AAAAAAALLA}{\bkmkend AAAAAAALLA}
00047 {\cf20 //}\par
{\bkmkstart AAAAAAALLB}{\bkmkend AAAAAAALLB}
00048 {\cf20 // Don't inherit from TestPartResult as its destructor is not virtual.}\par
{\bkmkstart AAAAAAALLC}{\bkmkend AAAAAAALLC}
00049 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGAK" }{}}{\fldrslt {\cs37\ul\cf2 GTEST_API_}}}
 TestPartResult \{\par
{\bkmkstart AAAAAAALLD}{\bkmkend AAAAAAALLD}
00050  {\cf17 public}:\par
{\bkmkstart AAAAAAALLE}{\bkmkend AAAAAAALLE}
00051   {\cf20 // The possible outcomes of a test part (i.e. an assertion or an}\par
{\bkmkstart AAAAAAALLF}{\bkmkend AAAAAAALLF}
00052   {\cf20 // explicit SUCCEED(), FAIL(), or ADD_FAILURE()).}\par
{\bkmkstart AAAAAAALLG}{\bkmkend AAAAAAALLG}
00053   {\cf17 enum} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQT" }{}}{\fldrslt {\cs37\ul\cf2 Type}}}
 \{\par
{\bkmkstart AAAAAAALLH}{\bkmkend AAAAAAALLH}
00054     kSuccess,          {\cf20 // Succeeded.}\par
{\bkmkstart AAAAAAALLI}{\bkmkend AAAAAAALLI}
00055     kNonFatalFailure,  {\cf20 // Failed but the test can continue.}\par
{\bkmkstart AAAAAAALLJ}{\bkmkend AAAAAAALLJ}
00056     kFatalFailure      {\cf20 // Failed and the test should be terminated.}\par
{\bkmkstart AAAAAAALLK}{\bkmkend AAAAAAALLK}
00057   \};\par
{\bkmkstart AAAAAAALLL}{\bkmkend AAAAAAALLL}
00058 \par
{\bkmkstart AAAAAAALLM}{\bkmkend AAAAAAALLM}
00059   {\cf20 // C'tor.  TestPartResult does NOT have a default constructor.}\par
{\bkmkstart AAAAAAALLN}{\bkmkend AAAAAAALLN}
00060   {\cf20 // Always use this constructor (with parameters) to create a}\par
{\bkmkstart AAAAAAALLO}{\bkmkend AAAAAAALLO}
00061   {\cf20 // TestPartResult object.}\par
{\bkmkstart AAAAAAALLP}{\bkmkend AAAAAAALLP}
00062   TestPartResult({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQT" }{}}{\fldrslt {\cs37\ul\cf2 Type}}}
 a_type,\par
{\bkmkstart AAAAAAALLQ}{\bkmkend AAAAAAALLQ}
00063                  {\cf17 const} {\cf18 char}* a_file_name,\par
{\bkmkstart AAAAAAALLR}{\bkmkend AAAAAAALLR}
00064                  {\cf18 int} a_line_number,\par
{\bkmkstart AAAAAAALLS}{\bkmkend AAAAAAALLS}
00065                  {\cf17 const} {\cf18 char}* a_message)\par
{\bkmkstart AAAAAAALLT}{\bkmkend AAAAAAALLT}
00066       : type_(a_type),\par
{\bkmkstart AAAAAAALLU}{\bkmkend AAAAAAALLU}
00067         file_name_(a_file_name == NULL ? {\cf22 ""} : a_file_name),\par
{\bkmkstart AAAAAAALLV}{\bkmkend AAAAAAALLV}
00068         line_number_(a_line_number),\par
{\bkmkstart AAAAAAALLW}{\bkmkend AAAAAAALLW}
00069         summary_(ExtractSummary(a_message)),\par
{\bkmkstart AAAAAAALLX}{\bkmkend AAAAAAALLX}
00070         message_(a_message) \{\par
{\bkmkstart AAAAAAALLY}{\bkmkend AAAAAAALLY}
00071   \}\par
{\bkmkstart AAAAAAALLZ}{\bkmkend AAAAAAALLZ}
00072 \par
{\bkmkstart AAAAAAALMA}{\bkmkend AAAAAAALMA}
00073   {\cf20 // Gets the outcome of the test part.}\par
{\bkmkstart AAAAAAALMB}{\bkmkend AAAAAAALMB}
00074   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQT" }{}}{\fldrslt {\cs37\ul\cf2 Type}}}
 type(){\cf17  const }\{ {\cf19 return} type_; \}\par
{\bkmkstart AAAAAAALMC}{\bkmkend AAAAAAALMC}
00075 \par
{\bkmkstart AAAAAAALMD}{\bkmkend AAAAAAALMD}
00076   {\cf20 // Gets the name of the source file where the test part took place, or}\par
{\bkmkstart AAAAAAALME}{\bkmkend AAAAAAALME}
00077   {\cf20 // NULL if it's unknown.}\par
{\bkmkstart AAAAAAALMF}{\bkmkend AAAAAAALMF}
00078   {\cf17 const} {\cf18 char}* file_name(){\cf17  const }\{\par
{\bkmkstart AAAAAAALMG}{\bkmkend AAAAAAALMG}
00079     {\cf19 return} file_name_.empty() ? NULL : file_name_.c_str();\par
{\bkmkstart AAAAAAALMH}{\bkmkend AAAAAAALMH}
00080   \}\par
{\bkmkstart AAAAAAALMI}{\bkmkend AAAAAAALMI}
00081 \par
{\bkmkstart AAAAAAALMJ}{\bkmkend AAAAAAALMJ}
00082   {\cf20 // Gets the line in the source file where the test part took place,}\par
{\bkmkstart AAAAAAALMK}{\bkmkend AAAAAAALMK}
00083   {\cf20 // or -1 if it's unknown.}\par
{\bkmkstart AAAAAAALML}{\bkmkend AAAAAAALML}
00084   {\cf18 int} line_number(){\cf17  const }\{ {\cf19 return} line_number_; \}\par
{\bkmkstart AAAAAAALMM}{\bkmkend AAAAAAALMM}
00085 \par
{\bkmkstart AAAAAAALMN}{\bkmkend AAAAAAALMN}
00086   {\cf20 // Gets the summary of the failure message.}\par
{\bkmkstart AAAAAAALMO}{\bkmkend AAAAAAALMO}
00087   {\cf17 const} {\cf18 char}* summary(){\cf17  const }\{ {\cf19 return} summary_.c_str(); \}\par
{\bkmkstart AAAAAAALMP}{\bkmkend AAAAAAALMP}
00088 \par
{\bkmkstart AAAAAAALMQ}{\bkmkend AAAAAAALMQ}
00089   {\cf20 // Gets the message associated with the test part.}\par
{\bkmkstart AAAAAAALMR}{\bkmkend AAAAAAALMR}
00090   {\cf17 const} {\cf18 char}* message(){\cf17  const }\{ {\cf19 return} message_.c_str(); \}\par
{\bkmkstart AAAAAAALMS}{\bkmkend AAAAAAALMS}
00091 \par
{\bkmkstart AAAAAAALMT}{\bkmkend AAAAAAALMT}
00092   {\cf20 // Returns true iff the test part passed.}\par
{\bkmkstart AAAAAAALMU}{\bkmkend AAAAAAALMU}
00093   {\cf18 bool} passed(){\cf17  const }\{ {\cf19 return} type_ == kSuccess; \}\par
{\bkmkstart AAAAAAALMV}{\bkmkend AAAAAAALMV}
00094 \par
{\bkmkstart AAAAAAALMW}{\bkmkend AAAAAAALMW}
00095   {\cf20 // Returns true iff the test part failed.}\par
{\bkmkstart AAAAAAALMX}{\bkmkend AAAAAAALMX}
00096   {\cf18 bool} failed(){\cf17  const }\{ {\cf19 return} type_ != kSuccess; \}\par
{\bkmkstart AAAAAAALMY}{\bkmkend AAAAAAALMY}
00097 \par
{\bkmkstart AAAAAAALMZ}{\bkmkend AAAAAAALMZ}
00098   {\cf20 // Returns true iff the test part non-fatally failed.}\par
{\bkmkstart AAAAAAALNA}{\bkmkend AAAAAAALNA}
00099   {\cf18 bool} nonfatally_failed(){\cf17  const }\{ {\cf19 return} type_ == kNonFatalFailure; \}\par
{\bkmkstart AAAAAAALNB}{\bkmkend AAAAAAALNB}
00100 \par
{\bkmkstart AAAAAAALNC}{\bkmkend AAAAAAALNC}
00101   {\cf20 // Returns true iff the test part fatally failed.}\par
{\bkmkstart AAAAAAALND}{\bkmkend AAAAAAALND}
00102   {\cf18 bool} fatally_failed(){\cf17  const }\{ {\cf19 return} type_ == kFatalFailure; \}\par
{\bkmkstart AAAAAAALNE}{\bkmkend AAAAAAALNE}
00103 \par
{\bkmkstart AAAAAAALNF}{\bkmkend AAAAAAALNF}
00104  {\cf17 private}:\par
{\bkmkstart AAAAAAALNG}{\bkmkend AAAAAAALNG}
00105   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQT" }{}}{\fldrslt {\cs37\ul\cf2 Type}}}
 type_;\par
{\bkmkstart AAAAAAALNH}{\bkmkend AAAAAAALNH}
00106 \par
{\bkmkstart AAAAAAALNI}{\bkmkend AAAAAAALNI}
00107   {\cf20 // Gets the summary of the failure message by omitting the stack}\par
{\bkmkstart AAAAAAALNJ}{\bkmkend AAAAAAALNJ}
00108   {\cf20 // trace in it.}\par
{\bkmkstart AAAAAAALNK}{\bkmkend AAAAAAALNK}
00109   {\cf17 static} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRR" }{}}{\fldrslt {\cs37\ul\cf2 std::string}}}
 ExtractSummary({\cf17 const} {\cf18 char}* message);\par
{\bkmkstart AAAAAAALNL}{\bkmkend AAAAAAALNL}
00110 \par
{\bkmkstart AAAAAAALNM}{\bkmkend AAAAAAALNM}
00111   {\cf20 // The name of the source file where the test part took place, or}\par
{\bkmkstart AAAAAAALNN}{\bkmkend AAAAAAALNN}
00112   {\cf20 // "" if the source file is unknown.}\par
{\bkmkstart AAAAAAALNO}{\bkmkend AAAAAAALNO}
00113   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRR" }{}}{\fldrslt {\cs37\ul\cf2 std::string}}}
 file_name_;\par
{\bkmkstart AAAAAAALNP}{\bkmkend AAAAAAALNP}
00114   {\cf20 // The line in the source file where the test part took place, or -1}\par
{\bkmkstart AAAAAAALNQ}{\bkmkend AAAAAAALNQ}
00115   {\cf20 // if the line number is unknown.}\par
{\bkmkstart AAAAAAALNR}{\bkmkend AAAAAAALNR}
00116   {\cf18 int} line_number_;\par
{\bkmkstart AAAAAAALNS}{\bkmkend AAAAAAALNS}
00117   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRR" }{}}{\fldrslt {\cs37\ul\cf2 std::string}}}
 summary_;  {\cf20 // The test failure summary.}\par
{\bkmkstart AAAAAAALNT}{\bkmkend AAAAAAALNT}
00118   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRR" }{}}{\fldrslt {\cs37\ul\cf2 std::string}}}
 message_;  {\cf20 // The test failure message.}\par
{\bkmkstart AAAAAAALNU}{\bkmkend AAAAAAALNU}
00119 \};\par
{\bkmkstart AAAAAAALNV}{\bkmkend AAAAAAALNV}
00120 \par
{\bkmkstart AAAAAAALNW}{\bkmkend AAAAAAALNW}
00121 {\cf20 // Prints a TestPartResult object.}\par
{\bkmkstart AAAAAAALNX}{\bkmkend AAAAAAALNX}
00122 std::ostream& {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGQC" }{}}{\fldrslt {\cs37\ul\cf2 operator<<}}}
(std::ostream& os, {\cf17 const} TestPartResult& result);\par
{\bkmkstart AAAAAAALNY}{\bkmkend AAAAAAALNY}
00123 \par
{\bkmkstart AAAAAAALNZ}{\bkmkend AAAAAAALNZ}
00124 {\cf20 // An array of TestPartResult objects.}\par
{\bkmkstart AAAAAAALOA}{\bkmkend AAAAAAALOA}
00125 {\cf20 //}\par
{\bkmkstart AAAAAAALOB}{\bkmkend AAAAAAALOB}
00126 {\cf20 // Don't inherit from TestPartResultArray as its destructor is not}\par
{\bkmkstart AAAAAAALOC}{\bkmkend AAAAAAALOC}
00127 {\cf20 // virtual.}\par
{\bkmkstart AAAAAAALOD}{\bkmkend AAAAAAALOD}
00128 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGAK" }{}}{\fldrslt {\cs37\ul\cf2 GTEST_API_}}}
 TestPartResultArray \{\par
{\bkmkstart AAAAAAALOE}{\bkmkend AAAAAAALOE}
00129  {\cf17 public}:\par
{\bkmkstart AAAAAAALOF}{\bkmkend AAAAAAALOF}
00130   TestPartResultArray() \{\}\par
{\bkmkstart AAAAAAALOG}{\bkmkend AAAAAAALOG}
00131 \par
{\bkmkstart AAAAAAALOH}{\bkmkend AAAAAAALOH}
00132   {\cf20 // Appends the given TestPartResult to the array.}\par
{\bkmkstart AAAAAAALOI}{\bkmkend AAAAAAALOI}
00133   {\cf18 void} Append({\cf17 const} TestPartResult& result);\par
{\bkmkstart AAAAAAALOJ}{\bkmkend AAAAAAALOJ}
00134 \par
{\bkmkstart AAAAAAALOK}{\bkmkend AAAAAAALOK}
00135   {\cf20 // Returns the TestPartResult at the given index (0-based).}\par
{\bkmkstart AAAAAAALOL}{\bkmkend AAAAAAALOL}
00136   {\cf17 const} TestPartResult& GetTestPartResult({\cf18 int} index) {\cf17 const};\par
{\bkmkstart AAAAAAALOM}{\bkmkend AAAAAAALOM}
00137 \par
{\bkmkstart AAAAAAALON}{\bkmkend AAAAAAALON}
00138   {\cf20 // Returns the number of TestPartResult objects in the array.}\par
{\bkmkstart AAAAAAALOO}{\bkmkend AAAAAAALOO}
00139   {\cf18 int} size() {\cf17 const};\par
{\bkmkstart AAAAAAALOP}{\bkmkend AAAAAAALOP}
00140 \par
{\bkmkstart AAAAAAALOQ}{\bkmkend AAAAAAALOQ}
00141  {\cf17 private}:\par
{\bkmkstart AAAAAAALOR}{\bkmkend AAAAAAALOR}
00142   std::vector<TestPartResult> array_;\par
{\bkmkstart AAAAAAALOS}{\bkmkend AAAAAAALOS}
00143 \par
{\bkmkstart AAAAAAALOT}{\bkmkend AAAAAAALOT}
00144   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAALDK" }{}}{\fldrslt {\cs37\ul\cf2 GTEST_DISALLOW_COPY_AND_ASSIGN_}}}
(TestPartResultArray);\par
{\bkmkstart AAAAAAALOU}{\bkmkend AAAAAAALOU}
00145 \};\par
{\bkmkstart AAAAAAALOV}{\bkmkend AAAAAAALOV}
00146 \par
{\bkmkstart AAAAAAALOW}{\bkmkend AAAAAAALOW}
00147 {\cf20 // This interface knows how to report a test part result.}\par
{\bkmkstart AAAAAAALOX}{\bkmkend AAAAAAALOX}
00148 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGAK" }{}}{\fldrslt {\cs37\ul\cf2 GTEST_API_}}}
 TestPartResultReporterInterface \{\par
{\bkmkstart AAAAAAALOY}{\bkmkend AAAAAAALOY}
00149  {\cf17 public}:\par
{\bkmkstart AAAAAAALOZ}{\bkmkend AAAAAAALOZ}
00150   {\cf17 virtual} ~TestPartResultReporterInterface() \{\}\par
{\bkmkstart AAAAAAALPA}{\bkmkend AAAAAAALPA}
00151 \par
{\bkmkstart AAAAAAALPB}{\bkmkend AAAAAAALPB}
00152   {\cf17 virtual} {\cf18 void} ReportTestPartResult({\cf17 const} TestPartResult& result) = 0;\par
{\bkmkstart AAAAAAALPC}{\bkmkend AAAAAAALPC}
00153 \};\par
{\bkmkstart AAAAAAALPD}{\bkmkend AAAAAAALPD}
00154 \par
{\bkmkstart AAAAAAALPE}{\bkmkend AAAAAAALPE}
00155 {\cf17 namespace }internal \{\par
{\bkmkstart AAAAAAALPF}{\bkmkend AAAAAAALPF}
00156 \par
{\bkmkstart AAAAAAALPG}{\bkmkend AAAAAAALPG}
00157 {\cf20 // This helper class is used by \{ASSERT|EXPECT\}_NO_FATAL_FAILURE to check if a}\par
{\bkmkstart AAAAAAALPH}{\bkmkend AAAAAAALPH}
00158 {\cf20 // statement generates new fatal failures. To do so it registers itself as the}\par
{\bkmkstart AAAAAAALPI}{\bkmkend AAAAAAALPI}
00159 {\cf20 // current test part result reporter. Besides checking if fatal failures were}\par
{\bkmkstart AAAAAAALPJ}{\bkmkend AAAAAAALPJ}
00160 {\cf20 // reported, it only delegates the reporting to the former result reporter.}\par
{\bkmkstart AAAAAAALPK}{\bkmkend AAAAAAALPK}
00161 {\cf20 // The original result reporter is restored in the destructor.}\par
{\bkmkstart AAAAAAALPL}{\bkmkend AAAAAAALPL}
00162 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN A USER PROGRAM.}\par
{\bkmkstart AAAAAAALPM}{\bkmkend AAAAAAALPM}
00163 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGAK" }{}}{\fldrslt {\cs37\ul\cf2 GTEST_API_}}}
 HasNewFatalFailureHelper\par
{\bkmkstart AAAAAAALPN}{\bkmkend AAAAAAALPN}
00164     : {\cf17 public} TestPartResultReporterInterface \{\par
{\bkmkstart AAAAAAALPO}{\bkmkend AAAAAAALPO}
00165  {\cf17 public}:\par
{\bkmkstart AAAAAAALPP}{\bkmkend AAAAAAALPP}
00166   HasNewFatalFailureHelper();\par
{\bkmkstart AAAAAAALPQ}{\bkmkend AAAAAAALPQ}
00167   {\cf17 virtual} ~HasNewFatalFailureHelper();\par
{\bkmkstart AAAAAAALPR}{\bkmkend AAAAAAALPR}
00168   {\cf17 virtual} {\cf18 void} ReportTestPartResult({\cf17 const} TestPartResult& result);\par
{\bkmkstart AAAAAAALPS}{\bkmkend AAAAAAALPS}
00169   {\cf18 bool} has_new_fatal_failure(){\cf17  const }\{ {\cf19 return} has_new_fatal_failure_; \}\par
{\bkmkstart AAAAAAALPT}{\bkmkend AAAAAAALPT}
00170  {\cf17 private}:\par
{\bkmkstart AAAAAAALPU}{\bkmkend AAAAAAALPU}
00171   {\cf18 bool} has_new_fatal_failure_;\par
{\bkmkstart AAAAAAALPV}{\bkmkend AAAAAAALPV}
00172   TestPartResultReporterInterface* original_reporter_;\par
{\bkmkstart AAAAAAALPW}{\bkmkend AAAAAAALPW}
00173 \par
{\bkmkstart AAAAAAALPX}{\bkmkend AAAAAAALPX}
00174   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAALDK" }{}}{\fldrslt {\cs37\ul\cf2 GTEST_DISALLOW_COPY_AND_ASSIGN_}}}
(HasNewFatalFailureHelper);\par
{\bkmkstart AAAAAAALPY}{\bkmkend AAAAAAALPY}
00175 \};\par
{\bkmkstart AAAAAAALPZ}{\bkmkend AAAAAAALPZ}
00176 \par
{\bkmkstart AAAAAAALQA}{\bkmkend AAAAAAALQA}
00177 \}  {\cf20 // namespace internal}\par
{\bkmkstart AAAAAAALQB}{\bkmkend AAAAAAALQB}
00178 \par
{\bkmkstart AAAAAAALQC}{\bkmkend AAAAAAALQC}
00179 \}  {\cf20 // namespace testing}\par
{\bkmkstart AAAAAAALQD}{\bkmkend AAAAAAALQD}
00180 \par
{\bkmkstart AAAAAAALQE}{\bkmkend AAAAAAALQE}
00181 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAGVZ" }{}}{\fldrslt {\cs37\ul\cf2 GTEST_DISABLE_MSC_WARNINGS_POP_}}}
()  {\cf20 //  4251}\par
{\bkmkstart AAAAAAALQF}{\bkmkend AAAAAAALQF}
00182 \par
{\bkmkstart AAAAAAALQG}{\bkmkend AAAAAAALQG}
00183 {\cf21 #endif  }{\cf20 // GTEST_INCLUDE_GTEST_GTEST_TEST_PART_H_}\par
}
}