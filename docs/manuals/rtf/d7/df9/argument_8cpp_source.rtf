{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
argument.cpp\par \pard\plain 
{\tc\tcl2 \v argument.cpp}
{\xe \v argument.cpp}
{\bkmkstart AAAAAAABPS}
{\bkmkend AAAAAAABPS}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAABPT}{\bkmkend AAAAAAABPT}
00001 {\cf21 #pragma once}\par
{\bkmkstart AAAAAAABPU}{\bkmkend AAAAAAABPU}
00002 {\cf21 #include <string>}\par
{\bkmkstart AAAAAAABPV}{\bkmkend AAAAAAABPV}
00003 {\cf21 #include <algorithm>}\par
{\bkmkstart AAAAAAABPW}{\bkmkend AAAAAAABPW}
00004 {\cf21 #include <filesystem>}\par
{\bkmkstart AAAAAAABPX}{\bkmkend AAAAAAABPX}
00005 {\cf21 #include <ctime>}\par
{\bkmkstart AAAAAAABPY}{\bkmkend AAAAAAABPY}
00006 \par
{\bkmkstart AAAAAAABPZ}{\bkmkend AAAAAAABPZ}
00007 {\cf21 #include "argument.hpp"}\par
{\bkmkstart AAAAAAABQA}{\bkmkend AAAAAAABQA}
00008 {\cf21 #include "tools.hpp"}\par
{\bkmkstart AAAAAAABQB}{\bkmkend AAAAAAABQB}
00009 {\cf21 #include "validations.hpp"}\par
{\bkmkstart AAAAAAABQC}{\bkmkend AAAAAAABQC}
00010 \par
{\bkmkstart AAAAAAABQD}{\bkmkend AAAAAAABQD}
00011 {\cf21 #ifdef _WIN32}\par
{\bkmkstart AAAAAAABQE}{\bkmkend AAAAAAABQE}
00012 {\cf21 #pragma warning( disable : 4996 )}\par
{\bkmkstart AAAAAAABQF}{\bkmkend AAAAAAABQF}
00013 {\cf21 #endif}\par
{\bkmkstart AAAAAAABQG}{\bkmkend AAAAAAABQG}
00014 \par
{\bkmkstart AAAAAAABQH}{\bkmkend AAAAAAABQH}
00015 {\cf17 using namespace }std;\par
{\bkmkstart AAAAAAABQI}{\bkmkend AAAAAAABQI}
00016 {\cf17 using namespace }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 cmdline}}}
;\par
{\bkmkstart AAAAAAABQJ}{\bkmkend AAAAAAABQJ}
00017 \par
{\bkmkstart AAAAAAABQK}{\bkmkend AAAAAAABQK}
00018 {\cf17 namespace }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 _cmdline}}}
 \{\par
{\bkmkstart AAAAAAABQL}{\bkmkend AAAAAAABQL}
00019     Argument::Argument(Parm *parm) \{\par
{\bkmkstart AAAAAAABQM}{\bkmkend AAAAAAABQM}
00020         {\cf20 // Initial constructor. from default data}\par
{\bkmkstart AAAAAAABQN}{\bkmkend AAAAAAABQN}
00021         name = string(parm->name);\par
{\bkmkstart AAAAAAABQO}{\bkmkend AAAAAAABQO}
00022         type = parm->type;\par
{\bkmkstart AAAAAAABQP}{\bkmkend AAAAAAABQP}
00023         multiple = parm->multiple;\par
{\bkmkstart AAAAAAABQQ}{\bkmkend AAAAAAABQQ}
00024         defValue = applyDefault(parm->value);\par
{\bkmkstart AAAAAAABQR}{\bkmkend AAAAAAABQR}
00025         validateDefault();\par
{\bkmkstart AAAAAAABQS}{\bkmkend AAAAAAABQS}
00026     \}\par
{\bkmkstart AAAAAAABQT}{\bkmkend AAAAAAABQT}
00027     Argument::Argument(Argument *arg) \{\par
{\bkmkstart AAAAAAABQU}{\bkmkend AAAAAAABQU}
00028         {\cf20 // Copy contructor}\par
{\bkmkstart AAAAAAABQV}{\bkmkend AAAAAAABQV}
00029         this->name = string(arg->name);\par
{\bkmkstart AAAAAAABQW}{\bkmkend AAAAAAABQW}
00030         this->type = arg->type;\par
{\bkmkstart AAAAAAABQX}{\bkmkend AAAAAAABQX}
00031         this->multiple = arg->multiple;\par
{\bkmkstart AAAAAAABQY}{\bkmkend AAAAAAABQY}
00032         {\cf19 if} (arg->first.length()    > 0) this->first    = string(arg->first);\par
{\bkmkstart AAAAAAABQZ}{\bkmkend AAAAAAABQZ}
00033         {\cf19 if} (arg->defValue.length() > 0) this->defValue = string(arg->defValue);\par
{\bkmkstart AAAAAAABRA}{\bkmkend AAAAAAABRA}
00034         {\cf19 if} (arg->values.size() > 0) \{\par
{\bkmkstart AAAAAAABRB}{\bkmkend AAAAAAABRB}
00035             {\cf19 for} ({\cf18 string} s : arg->values) this->values.insert(s);\par
{\bkmkstart AAAAAAABRC}{\bkmkend AAAAAAABRC}
00036         \}\par
{\bkmkstart AAAAAAABRD}{\bkmkend AAAAAAABRD}
00037         validateDefault();\par
{\bkmkstart AAAAAAABRE}{\bkmkend AAAAAAABRE}
00038     \}\par
{\bkmkstart AAAAAAABRF}{\bkmkend AAAAAAABRF}
00039     Argument::Argument({\cf17 const} {\cf18 char}* name, {\cf17 const} {\cf18 char}* value) \{\par
{\bkmkstart AAAAAAABRG}{\bkmkend AAAAAAABRG}
00040         this->name     = string(name);\par
{\bkmkstart AAAAAAABRH}{\bkmkend AAAAAAABRH}
00041         this->defValue = applyDefault(value); \par
{\bkmkstart AAAAAAABRI}{\bkmkend AAAAAAABRI}
00042         validateDefault();\par
{\bkmkstart AAAAAAABRJ}{\bkmkend AAAAAAABRJ}
00043     \}\par
{\bkmkstart AAAAAAABRK}{\bkmkend AAAAAAABRK}
00044     Argument::Argument({\cf17 const} {\cf18 char}* name, {\cf17 const} {\cf18 char} *value, Source source) \{\par
{\bkmkstart AAAAAAABRL}{\bkmkend AAAAAAABRL}
00045         {\cf19 if} (source == Source::DEFAULT) \{\par
{\bkmkstart AAAAAAABRM}{\bkmkend AAAAAAABRM}
00046             this->defValue = applyDefault(value);\par
{\bkmkstart AAAAAAABRN}{\bkmkend AAAAAAABRN}
00047         \}\par
{\bkmkstart AAAAAAABRO}{\bkmkend AAAAAAABRO}
00048         {\cf19 else} \{\par
{\bkmkstart AAAAAAABRP}{\bkmkend AAAAAAABRP}
00049             {\cf19 if} (values.size() == 0) this->first = string(value);\par
{\bkmkstart AAAAAAABRQ}{\bkmkend AAAAAAABRQ}
00050             this->values.emplace(value);\par
{\bkmkstart AAAAAAABRR}{\bkmkend AAAAAAABRR}
00051         \}\par
{\bkmkstart AAAAAAABRS}{\bkmkend AAAAAAABRS}
00052         this->name = string(name);\par
{\bkmkstart AAAAAAABRT}{\bkmkend AAAAAAABRT}
00053         this->source = source;\par
{\bkmkstart AAAAAAABRU}{\bkmkend AAAAAAABRU}
00054         validateDefault();\par
{\bkmkstart AAAAAAABRV}{\bkmkend AAAAAAABRV}
00055     \}\par
{\bkmkstart AAAAAAABRW}{\bkmkend AAAAAAABRW}
00056     Argument::Argument({\cf17 const} {\cf18 char}* name, {\cf17 const} {\cf18 char}* value, Type type) : Argument(name, value) \{\par
{\bkmkstart AAAAAAABRX}{\bkmkend AAAAAAABRX}
00057         this->type = type;\par
{\bkmkstart AAAAAAABRY}{\bkmkend AAAAAAABRY}
00058         validateDefault();\par
{\bkmkstart AAAAAAABRZ}{\bkmkend AAAAAAABRZ}
00059     \}\par
{\bkmkstart AAAAAAABSA}{\bkmkend AAAAAAABSA}
00060     Argument::~Argument() \{\par
{\bkmkstart AAAAAAABSB}{\bkmkend AAAAAAABSB}
00061         {\cf20 // if (defValue) free(defValue);}\par
{\bkmkstart AAAAAAABSC}{\bkmkend AAAAAAABSC}
00062     \}\par
{\bkmkstart AAAAAAABSD}{\bkmkend AAAAAAABSD}
00063 \par
{\bkmkstart AAAAAAABSE}{\bkmkend AAAAAAABSE}
00064     {\cf17 const} {\cf18 char}* Argument::getValue() \{ \par
{\bkmkstart AAAAAAABSF}{\bkmkend AAAAAAABSF}
00065         {\cf19 return} (first.length() > 0) ? first.c_str() : defValue.c_str();\par
{\bkmkstart AAAAAAABSG}{\bkmkend AAAAAAABSG}
00066     \}\par
{\bkmkstart AAAAAAABSH}{\bkmkend AAAAAAABSH}
00067     vector<const char *>  Argument::getValues() \{\par
{\bkmkstart AAAAAAABSI}{\bkmkend AAAAAAABSI}
00068         {\cf18 int} i = 0;\par
{\bkmkstart AAAAAAABSJ}{\bkmkend AAAAAAABSJ}
00069         vector<const char*> v(values.size());\par
{\bkmkstart AAAAAAABSK}{\bkmkend AAAAAAABSK}
00070         {\cf19 for} ({\cf18 string} val : values) \{\par
{\bkmkstart AAAAAAABSL}{\bkmkend AAAAAAABSL}
00071             v[i++] = strdup((val.c_str()));\par
{\bkmkstart AAAAAAABSM}{\bkmkend AAAAAAABSM}
00072         \}\par
{\bkmkstart AAAAAAABSN}{\bkmkend AAAAAAABSN}
00073         {\cf19 return} v;\par
{\bkmkstart AAAAAAABSO}{\bkmkend AAAAAAABSO}
00074     \}\par
{\bkmkstart AAAAAAABSP}{\bkmkend AAAAAAABSP}
00075     vector<string>  Argument::getStringValues() \{\par
{\bkmkstart AAAAAAABSQ}{\bkmkend AAAAAAABSQ}
00076         std::vector<string> v(values.size());\par
{\bkmkstart AAAAAAABSR}{\bkmkend AAAAAAABSR}
00077         std::copy(values.begin(), values.end(), v.begin());\par
{\bkmkstart AAAAAAABSS}{\bkmkend AAAAAAABSS}
00078         {\cf19 return} v;\par
{\bkmkstart AAAAAAABST}{\bkmkend AAAAAAABST}
00079     \}\par
{\bkmkstart AAAAAAABSU}{\bkmkend AAAAAAABSU}
00080 \par
{\bkmkstart AAAAAAABSV}{\bkmkend AAAAAAABSV}
00081     {\cf18 bool} Argument::getBoolean() \{\par
{\bkmkstart AAAAAAABSW}{\bkmkend AAAAAAABSW}
00082         {\cf18 string} val = (first.length() > 0) ? first : defValue;\par
{\bkmkstart AAAAAAABSX}{\bkmkend AAAAAAABSX}
00083 \par
{\bkmkstart AAAAAAABSY}{\bkmkend AAAAAAABSY}
00084         {\cf19 if} (val.length() == 0)         {\cf19 return} {\cf17 false};\par
{\bkmkstart AAAAAAABSZ}{\bkmkend AAAAAAABSZ}
00085         {\cf19 if} (val.at(0) == {\cf23 '0'})          {\cf19 return} {\cf17 false};\par
{\bkmkstart AAAAAAABTA}{\bkmkend AAAAAAABTA}
00086         {\cf19 if} (val.at(0) == {\cf23 '1'})          {\cf19 return} {\cf17 true};\par
{\bkmkstart AAAAAAABTB}{\bkmkend AAAAAAABTB}
00087         {\cf19 if} (val.compare({\cf22 "-1"})    == 0) {\cf19 return} {\cf17 true};\par
{\bkmkstart AAAAAAABTC}{\bkmkend AAAAAAABTC}
00088         {\cf19 if} (val.compare({\cf22 "no"})    == 0) {\cf19 return} {\cf17 false};\par
{\bkmkstart AAAAAAABTD}{\bkmkend AAAAAAABTD}
00089         {\cf19 if} (val.compare({\cf22 "false"}) == 0) {\cf19 return} {\cf17 false};\par
{\bkmkstart AAAAAAABTE}{\bkmkend AAAAAAABTE}
00090         {\cf19 if} (val.compare({\cf22 "yes"})   == 0) {\cf19 return} {\cf17 true};\par
{\bkmkstart AAAAAAABTF}{\bkmkend AAAAAAABTF}
00091         {\cf19 if} (val.compare({\cf22 "true"})  == 0) {\cf19 return} {\cf17 true};\par
{\bkmkstart AAAAAAABTG}{\bkmkend AAAAAAABTG}
00092         {\cf19 if} (val.compare({\cf22 "si"})    == 0) {\cf19 return} {\cf17 true};\par
{\bkmkstart AAAAAAABTH}{\bkmkend AAAAAAABTH}
00093         {\cf19 return} {\cf17 false};\par
{\bkmkstart AAAAAAABTI}{\bkmkend AAAAAAABTI}
00094     \}\par
{\bkmkstart AAAAAAABTJ}{\bkmkend AAAAAAABTJ}
00095     Argument& Argument::initValues(vector<string> values) \{\par
{\bkmkstart AAAAAAABTK}{\bkmkend AAAAAAABTK}
00096         first = string(values[0]);\par
{\bkmkstart AAAAAAABTL}{\bkmkend AAAAAAABTL}
00097         this->values.clear();\par
{\bkmkstart AAAAAAABTM}{\bkmkend AAAAAAABTM}
00098         {\cf19 for} ({\cf18 string} s : values) this->values.emplace(s);\par
{\bkmkstart AAAAAAABTN}{\bkmkend AAAAAAABTN}
00099         {\cf19 return} *{\cf17 this};\par
{\bkmkstart AAAAAAABTO}{\bkmkend AAAAAAABTO}
00100     \}\par
{\bkmkstart AAAAAAABTP}{\bkmkend AAAAAAABTP}
00101 \par
{\bkmkstart AAAAAAABTQ}{\bkmkend AAAAAAABTQ}
00102     Argument& Argument::setFromEnv({\cf17 const} {\cf18 char}* value) \{\par
{\bkmkstart AAAAAAABTR}{\bkmkend AAAAAAABTR}
00103         {\cf19 if} (values.size() == 0) first = string(value);\par
{\bkmkstart AAAAAAABTS}{\bkmkend AAAAAAABTS}
00104         this->values.emplace(std::string(value));\par
{\bkmkstart AAAAAAABTT}{\bkmkend AAAAAAABTT}
00105         this->source = Source::ENV;\par
{\bkmkstart AAAAAAABTU}{\bkmkend AAAAAAABTU}
00106         {\cf19 return} *{\cf17 this};\par
{\bkmkstart AAAAAAABTV}{\bkmkend AAAAAAABTV}
00107     \}\par
{\bkmkstart AAAAAAABTW}{\bkmkend AAAAAAABTW}
00108     Argument& Argument::setValue({\cf17 const} {\cf18 char} *value) \{\par
{\bkmkstart AAAAAAABTX}{\bkmkend AAAAAAABTX}
00109         first = string(value);\par
{\bkmkstart AAAAAAABTY}{\bkmkend AAAAAAABTY}
00110         this->values.emplace(value);\par
{\bkmkstart AAAAAAABTZ}{\bkmkend AAAAAAABTZ}
00111         {\cf19 return} *{\cf17 this};\par
{\bkmkstart AAAAAAABUA}{\bkmkend AAAAAAABUA}
00112     \}\par
{\bkmkstart AAAAAAABUB}{\bkmkend AAAAAAABUB}
00113     Argument& Argument::setValue({\cf18 bool} value) \{\par
{\bkmkstart AAAAAAABUC}{\bkmkend AAAAAAABUC}
00114         {\cf18 string} s = string(value ? {\cf22 "1"} : {\cf22 "0"});\par
{\bkmkstart AAAAAAABUD}{\bkmkend AAAAAAABUD}
00115         first = string(s);\par
{\bkmkstart AAAAAAABUE}{\bkmkend AAAAAAABUE}
00116         this->values.emplace(s);\par
{\bkmkstart AAAAAAABUF}{\bkmkend AAAAAAABUF}
00117         {\cf19 return} *{\cf17 this};\par
{\bkmkstart AAAAAAABUG}{\bkmkend AAAAAAABUG}
00118     \}\par
{\bkmkstart AAAAAAABUH}{\bkmkend AAAAAAABUH}
00119     Argument& Argument::setValue(std::string value) \{\par
{\bkmkstart AAAAAAABUI}{\bkmkend AAAAAAABUI}
00120         first = string(value);\par
{\bkmkstart AAAAAAABUJ}{\bkmkend AAAAAAABUJ}
00121         this->values.emplace(value);\par
{\bkmkstart AAAAAAABUK}{\bkmkend AAAAAAABUK}
00122         {\cf19 return} *{\cf17 this};\par
{\bkmkstart AAAAAAABUL}{\bkmkend AAAAAAABUL}
00123     \}\par
{\bkmkstart AAAAAAABUM}{\bkmkend AAAAAAABUM}
00124     Argument& Argument::addValue(std::string value) \{\par
{\bkmkstart AAAAAAABUN}{\bkmkend AAAAAAABUN}
00125         {\cf19 if} (values.size() == 0) first = string(value);\par
{\bkmkstart AAAAAAABUO}{\bkmkend AAAAAAABUO}
00126         this->values.emplace(value);\par
{\bkmkstart AAAAAAABUP}{\bkmkend AAAAAAABUP}
00127         {\cf19 return} *{\cf17 this};\par
{\bkmkstart AAAAAAABUQ}{\bkmkend AAAAAAABUQ}
00128     \}\par
{\bkmkstart AAAAAAABUR}{\bkmkend AAAAAAABUR}
00129     Argument& Argument::addValues(vector<string> values) \{\par
{\bkmkstart AAAAAAABUS}{\bkmkend AAAAAAABUS}
00130         {\cf19 if} (this->values.size() == 0) first = string(values[0]);\par
{\bkmkstart AAAAAAABUT}{\bkmkend AAAAAAABUT}
00131         {\cf19 for} ({\cf18 string} v : values) this->values.emplace(v);\par
{\bkmkstart AAAAAAABUU}{\bkmkend AAAAAAABUU}
00132         {\cf19 return} *{\cf17 this};\par
{\bkmkstart AAAAAAABUV}{\bkmkend AAAAAAABUV}
00133     \}\par
{\bkmkstart AAAAAAABUW}{\bkmkend AAAAAAABUW}
00134     Argument& Argument::makeUpper() \{\par
{\bkmkstart AAAAAAABUX}{\bkmkend AAAAAAABUX}
00135         for_each(name.begin(), name.end(), []({\cf18 char}& c) \{ c = ::toupper(c);\});\par
{\bkmkstart AAAAAAABUY}{\bkmkend AAAAAAABUY}
00136         {\cf19 return} *{\cf17 this};\par
{\bkmkstart AAAAAAABUZ}{\bkmkend AAAAAAABUZ}
00137     \}\par
{\bkmkstart AAAAAAABVA}{\bkmkend AAAAAAABVA}
00138     {\cf18 void} Argument::validateDefault() \{\par
{\bkmkstart AAAAAAABVB}{\bkmkend AAAAAAABVB}
00139         {\cf19 if} (defValue.length() == 0) {\cf19 return};\par
{\bkmkstart AAAAAAABVC}{\bkmkend AAAAAAABVC}
00140         {\cf19 if} (type == Type::STRING) {\cf19 return};\par
{\bkmkstart AAAAAAABVD}{\bkmkend AAAAAAABVD}
00141         validateValue(defValue.c_str(), type);\par
{\bkmkstart AAAAAAABVE}{\bkmkend AAAAAAABVE}
00142     \}\par
{\bkmkstart AAAAAAABVF}{\bkmkend AAAAAAABVF}
00143     {\cf18 string} Argument::applyDefault({\cf17 const} {\cf18 char}* txt) \{\par
{\bkmkstart AAAAAAABVG}{\bkmkend AAAAAAABVG}
00144         {\cf18 char} aux[256] = {\cf22 ""};\par
{\bkmkstart AAAAAAABVH}{\bkmkend AAAAAAABVH}
00145         {\cf19 if} (txt != NULL && strlen(txt) > 0) {\cf19 return} string(txt);\par
{\bkmkstart AAAAAAABVI}{\bkmkend AAAAAAABVI}
00146         std::time_t t = std::time(0);   \par
{\bkmkstart AAAAAAABVJ}{\bkmkend AAAAAAABVJ}
00147         std::tm* now = std::localtime(&t);\par
{\bkmkstart AAAAAAABVK}{\bkmkend AAAAAAABVK}
00148         {\cf19 switch} (this->type) \{\par
{\bkmkstart AAAAAAABVL}{\bkmkend AAAAAAABVL}
00149                {\cf19 case} Type::DATE: \par
{\bkmkstart AAAAAAABVM}{\bkmkend AAAAAAABVM}
00150                     defaultDate(aux);\par
{\bkmkstart AAAAAAABVN}{\bkmkend AAAAAAABVN}
00151                     {\cf19 break};\par
{\bkmkstart AAAAAAABVO}{\bkmkend AAAAAAABVO}
00152                {\cf19 case} Type::TIME:\par
{\bkmkstart AAAAAAABVP}{\bkmkend AAAAAAABVP}
00153                     sprintf(aux, {\cf22 "%02d:%02d:%02d"}, now->tm_hour, now->tm_min, now->tm_sec);\par
{\bkmkstart AAAAAAABVQ}{\bkmkend AAAAAAABVQ}
00154                     {\cf19 break};\par
{\bkmkstart AAAAAAABVR}{\bkmkend AAAAAAABVR}
00155                {\cf19 case} Type::DATETIME:\par
{\bkmkstart AAAAAAABVS}{\bkmkend AAAAAAABVS}
00156                     sprintf(aux, {\cf22 "%04d-%02d-%02d %02d:%02d:%02d"},\par
{\bkmkstart AAAAAAABVT}{\bkmkend AAAAAAABVT}
00157                                  now->tm_year + 1900, now->tm_mon + 1, now->tm_mday,\par
{\bkmkstart AAAAAAABVU}{\bkmkend AAAAAAABVU}
00158                                  now->tm_hour, now->tm_min, now->tm_sec);\par
{\bkmkstart AAAAAAABVV}{\bkmkend AAAAAAABVV}
00159                     {\cf19 break};\par
{\bkmkstart AAAAAAABVW}{\bkmkend AAAAAAABVW}
00160                {\cf19 case} Type::TMS:\par
{\bkmkstart AAAAAAABVX}{\bkmkend AAAAAAABVX}
00161                     sprintf(aux, {\cf22 "%04d-%02d-%02d-%02d:%02d:%02d.000000"},\par
{\bkmkstart AAAAAAABVY}{\bkmkend AAAAAAABVY}
00162                     now->tm_year + 1900, now->tm_mon + 1, now->tm_mday,\par
{\bkmkstart AAAAAAABVZ}{\bkmkend AAAAAAABVZ}
00163                     now->tm_hour, now->tm_min, now->tm_sec);\par
{\bkmkstart AAAAAAABWA}{\bkmkend AAAAAAABWA}
00164                     {\cf19 break};\par
{\bkmkstart AAAAAAABWB}{\bkmkend AAAAAAABWB}
00165                {\cf19 case} Type::DIR:\par
{\bkmkstart AAAAAAABWC}{\bkmkend AAAAAAABWC}
00166                {\cf19 case} Type::DIR_EXISTS:\par
{\bkmkstart AAAAAAABWD}{\bkmkend AAAAAAABWD}
00167                     strcpy(aux, ({\cf17 const} {\cf18 char} *) std::filesystem::current_path().{\cf18 string}().c_str());\par
{\bkmkstart AAAAAAABWE}{\bkmkend AAAAAAABWE}
00168                     {\cf19 break};\par
{\bkmkstart AAAAAAABWF}{\bkmkend AAAAAAABWF}
00169                {\cf19 case} Type::BOOL:\par
{\bkmkstart AAAAAAABWG}{\bkmkend AAAAAAABWG}
00170                     aux[0] = {\cf23 '0'}; aux[1] = 0x0;\par
{\bkmkstart AAAAAAABWH}{\bkmkend AAAAAAABWH}
00171                     {\cf19 break};\par
{\bkmkstart AAAAAAABWI}{\bkmkend AAAAAAABWI}
00172                {\cf19 default}:\par
{\bkmkstart AAAAAAABWJ}{\bkmkend AAAAAAABWJ}
00173                     {\cf19 if} (txt == NULL) {\cf19 return} string({\cf22 ""});\par
{\bkmkstart AAAAAAABWK}{\bkmkend AAAAAAABWK}
00174                     {\cf19 return} string(aux);\par
{\bkmkstart AAAAAAABWL}{\bkmkend AAAAAAABWL}
00175         \}\par
{\bkmkstart AAAAAAABWM}{\bkmkend AAAAAAABWM}
00176         {\cf19 return} ({\cf18 string}(aux));\par
{\bkmkstart AAAAAAABWN}{\bkmkend AAAAAAABWN}
00177     \}\par
{\bkmkstart AAAAAAABWO}{\bkmkend AAAAAAABWO}
00178 \par
{\bkmkstart AAAAAAABWP}{\bkmkend AAAAAAABWP}
00179 \};\par
}
}