{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
commandline.hpp\par \pard\plain 
{\tc\tcl2 \v commandline.hpp}
{\xe \v commandline.hpp}
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAAMN}{\bkmkend AAAAAAAAMN}
00001 {\cf21 #pragma once}\par
{\bkmkstart AAAAAAAAMO}{\bkmkend AAAAAAAAMO}
00002 \par
{\bkmkstart AAAAAAAAMP}{\bkmkend AAAAAAAAMP}
00003 {\cf21 #ifndef ENV_PREFFIX}\par
{\bkmkstart AAAAAAAAMQ}{\bkmkend AAAAAAAAMQ}
00004 {\cf21 #define ENV_PREFFIX "env_preffix"}\par
{\bkmkstart AAAAAAAAMR}{\bkmkend AAAAAAAAMR}
00005 {\cf21 #endif}\par
{\bkmkstart AAAAAAAAMS}{\bkmkend AAAAAAAAMS}
00006 \par
{\bkmkstart AAAAAAAAMT}{\bkmkend AAAAAAAAMT}
00007 {\cf21 #include "types.hpp"}\par
{\bkmkstart AAAAAAAAMU}{\bkmkend AAAAAAAAMU}
00008 {\cf21 #include "group.hpp"}\par
{\bkmkstart AAAAAAAAMV}{\bkmkend AAAAAAAAMV}
00009 {\cf21 #include "parameter_tree.hpp"}\par
{\bkmkstart AAAAAAAAMW}{\bkmkend AAAAAAAAMW}
00010 \par
{\bkmkstart AAAAAAAAMX}{\bkmkend AAAAAAAAMX}
00011 {\cf17 using namespace }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 cmdline}}}
;\par
{\bkmkstart AAAAAAAAMY}{\bkmkend AAAAAAAAMY}
00012 \par
{\bkmkstart AAAAAAAAMZ}{\bkmkend AAAAAAAAMZ}
00013 {\cf17 namespace }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 _cmdline}}}
 \{\par
{\bkmkstart AAAAAAAANA}{\bkmkend AAAAAAAANA}
00014     {\cf17 class }CommandLine \{\par
{\bkmkstart AAAAAAAANB}{\bkmkend AAAAAAAANB}
00015     {\cf17 public}:\par
{\bkmkstart AAAAAAAANC}{\bkmkend AAAAAAAANC}
00016         CommandLine({\cf18 int} argc, {\cf17 const} {\cf18 char}** argv, Parameters parms, {\cf18 bool} sensitive, {\cf18 bool} strict);\par
{\bkmkstart AAAAAAAAND}{\bkmkend AAAAAAAAND}
00017         ~CommandLine();\par
{\bkmkstart AAAAAAAANE}{\bkmkend AAAAAAAANE}
00018 \par
{\bkmkstart AAAAAAAANF}{\bkmkend AAAAAAAANF}
00019         vector<const char*> getArgs();\par
{\bkmkstart AAAAAAAANG}{\bkmkend AAAAAAAANG}
00020         Type getType({\cf17 const} {\cf18 char} *name);\par
{\bkmkstart AAAAAAAANH}{\bkmkend AAAAAAAANH}
00021         {\cf20 // Flags}\par
{\bkmkstart AAAAAAAANI}{\bkmkend AAAAAAAANI}
00022         {\cf18 bool}  hasFlag({\cf17 const} {\cf18 char}* flag);\par
{\bkmkstart AAAAAAAANJ}{\bkmkend AAAAAAAANJ}
00023         Flags getDefaultFlags({\cf18 bool} all);\par
{\bkmkstart AAAAAAAANK}{\bkmkend AAAAAAAANK}
00024         Flags getCurrentFlags({\cf18 bool} all);\par
{\bkmkstart AAAAAAAANL}{\bkmkend AAAAAAAANL}
00025 \par
{\bkmkstart AAAAAAAANM}{\bkmkend AAAAAAAANM}
00026         {\cf20 // Options}\par
{\bkmkstart AAAAAAAANN}{\bkmkend AAAAAAAANN}
00027         {\cf18 int}                 getOptionNumValues({\cf17 const} {\cf18 char}* name);\par
{\bkmkstart AAAAAAAANO}{\bkmkend AAAAAAAANO}
00028         {\cf18 bool}                hasOption({\cf17 const} {\cf18 char}* name);\par
{\bkmkstart AAAAAAAANP}{\bkmkend AAAAAAAANP}
00029         {\cf18 bool}                isOptionMultiple({\cf17 const} {\cf18 char}* name);\par
{\bkmkstart AAAAAAAANQ}{\bkmkend AAAAAAAANQ}
00030         Options             getCurrentOptions();\par
{\bkmkstart AAAAAAAANR}{\bkmkend AAAAAAAANR}
00031         {\cf17 const} {\cf18 char}*         getOption({\cf17 const} {\cf18 char}* name);\par
{\bkmkstart AAAAAAAANS}{\bkmkend AAAAAAAANS}
00032         vector<const char*> getOptionValues({\cf17 const} {\cf18 char}* name);\par
{\bkmkstart AAAAAAAANT}{\bkmkend AAAAAAAANT}
00033         unordered_map<string, string>   getDefaultOptions();\par
{\bkmkstart AAAAAAAANU}{\bkmkend AAAAAAAANU}
00034         {\cf20 // Definitions}\par
{\bkmkstart AAAAAAAANV}{\bkmkend AAAAAAAANV}
00035         {\cf18 bool}                 hasDefinition({\cf17 const} {\cf18 char}* def);\par
{\bkmkstart AAAAAAAANW}{\bkmkend AAAAAAAANW}
00036         {\cf18 bool}                 isDefinitionMultiple({\cf17 const} {\cf18 char}* name);\par
{\bkmkstart AAAAAAAANX}{\bkmkend AAAAAAAANX}
00037         {\cf18 int}                  getDefinitionNumValues({\cf17 const} {\cf18 char}* name);\par
{\bkmkstart AAAAAAAANY}{\bkmkend AAAAAAAANY}
00038 \par
{\bkmkstart AAAAAAAANZ}{\bkmkend AAAAAAAANZ}
00039         {\cf17 const} {\cf18 char}*          getDefinition({\cf17 const} {\cf18 char}* name) \{ {\cf19 return} getValue(&defines, name); \}\par
{\bkmkstart AAAAAAAAOA}{\bkmkend AAAAAAAAOA}
00040         vector<const char*>  getDefinitionValues({\cf17 const} {\cf18 char}* name);\par
{\bkmkstart AAAAAAAAOB}{\bkmkend AAAAAAAAOB}
00041         Options              getDefinitions();\par
{\bkmkstart AAAAAAAAOC}{\bkmkend AAAAAAAAOC}
00042 \par
{\bkmkstart AAAAAAAAOD}{\bkmkend AAAAAAAAOD}
00043     {\cf17 private}:\par
{\bkmkstart AAAAAAAAOE}{\bkmkend AAAAAAAAOE}
00044         vector<const char*> inputs;\par
{\bkmkstart AAAAAAAAOF}{\bkmkend AAAAAAAAOF}
00045         {\cf18 bool}   sensitive = {\cf17 false};\par
{\bkmkstart AAAAAAAAOG}{\bkmkend AAAAAAAAOG}
00046         {\cf18 bool}   strict = {\cf17 false};\par
{\bkmkstart AAAAAAAAOH}{\bkmkend AAAAAAAAOH}
00047         Group  options;\par
{\bkmkstart AAAAAAAAOI}{\bkmkend AAAAAAAAOI}
00048         Group  flags;\par
{\bkmkstart AAAAAAAAOJ}{\bkmkend AAAAAAAAOJ}
00049         Group  defines;\par
{\bkmkstart AAAAAAAAOK}{\bkmkend AAAAAAAAOK}
00050         {\cf18 void}  parseCommandLine({\cf17 const} {\cf18 int} argc, {\cf17 const} {\cf18 char}** argv);\par
{\bkmkstart AAAAAAAAOL}{\bkmkend AAAAAAAAOL}
00051         {\cf18 char}* addValueToOption({\cf17 const} {\cf18 char}* option, {\cf18 char}* prev);\par
{\bkmkstart AAAAAAAAOM}{\bkmkend AAAAAAAAOM}
00052         {\cf18 char}* checkOption({\cf17 const} {\cf18 char}* option);\par
{\bkmkstart AAAAAAAAON}{\bkmkend AAAAAAAAON}
00053         {\cf18 char}* checkFlag({\cf17 const} {\cf18 char}* flag);\par
{\bkmkstart AAAAAAAAOO}{\bkmkend AAAAAAAAOO}
00054         {\cf18 char}* checkParameter(ParameterTree* root[], {\cf17 const} {\cf18 char}* parm);\par
{\bkmkstart AAAAAAAAOP}{\bkmkend AAAAAAAAOP}
00055         {\cf18 void}  checkAlreadySet(Group* group, {\cf17 const} {\cf18 char}* what);\par
{\bkmkstart AAAAAAAAOQ}{\bkmkend AAAAAAAAOQ}
00056 \par
{\bkmkstart AAAAAAAAOR}{\bkmkend AAAAAAAAOR}
00057         {\cf18 char}* updateFlag({\cf17 const} {\cf18 char}* flag, {\cf17 const} {\cf18 char}* prev, {\cf18 bool} value);\par
{\bkmkstart AAAAAAAAOS}{\bkmkend AAAAAAAAOS}
00058         {\cf18 void}  updateFlagItem({\cf17 const} {\cf18 char}* flag, {\cf17 const} {\cf18 char}* prev, {\cf18 bool} value);\par
{\bkmkstart AAAAAAAAOT}{\bkmkend AAAAAAAAOT}
00059         {\cf18 char}* updateOption({\cf17 const} {\cf18 char}* option, {\cf18 char}* value);\par
{\bkmkstart AAAAAAAAOU}{\bkmkend AAAAAAAAOU}
00060         {\cf18 char}* updateDefinition({\cf17 const} {\cf18 char}* def);\par
{\bkmkstart AAAAAAAAOV}{\bkmkend AAAAAAAAOV}
00061         {\cf18 void}  updateValuesFromEnvironment();\par
{\bkmkstart AAAAAAAAOW}{\bkmkend AAAAAAAAOW}
00062         {\cf18 void}  udpateArgsFromEnv(Group& parms, {\cf17 const} {\cf18 char}* prfx);\par
{\bkmkstart AAAAAAAAOX}{\bkmkend AAAAAAAAOX}
00063 \par
{\bkmkstart AAAAAAAAOY}{\bkmkend AAAAAAAAOY}
00064         Flags       getFlags({\cf18 bool} active, {\cf18 bool} set);\par
{\bkmkstart AAAAAAAAOZ}{\bkmkend AAAAAAAAOZ}
00065         Argument&   find(Group* group, {\cf17 const} {\cf18 char}* what);\par
{\bkmkstart AAAAAAAAPA}{\bkmkend AAAAAAAAPA}
00066         Argument*   findPointer(Group* group, {\cf17 const} {\cf18 char}* what);\par
{\bkmkstart AAAAAAAAPB}{\bkmkend AAAAAAAAPB}
00067         {\cf17 const} {\cf18 char}* getValue(Group* group, {\cf17 const} {\cf18 char}* what);\par
{\bkmkstart AAAAAAAAPC}{\bkmkend AAAAAAAAPC}
00068         unordered_map<string,string>     getOptionsValue({\cf18 bool} def);\par
{\bkmkstart AAAAAAAAPD}{\bkmkend AAAAAAAAPD}
00069         {\cf18 void}       loadParameters(Parameters parms);\par
{\bkmkstart AAAAAAAAPE}{\bkmkend AAAAAAAAPE}
00070         {\cf18 void}        loadHelpFlags();\par
{\bkmkstart AAAAAAAAPF}{\bkmkend AAAAAAAAPF}
00071         \par
{\bkmkstart AAAAAAAAPG}{\bkmkend AAAAAAAAPG}
00072        {\cf18 char}* configFileInCommandLine({\cf18 int} argc, {\cf17 const} {\cf18 char} **argv);\par
{\bkmkstart AAAAAAAAPH}{\bkmkend AAAAAAAAPH}
00073        {\cf18 void}  processConfigFile({\cf18 char} *fname);\par
{\bkmkstart AAAAAAAAPI}{\bkmkend AAAAAAAAPI}
00074        {\cf18 char}* processOptionOrDefinition({\cf17 const} {\cf18 char} *argv, {\cf18 char} *prevToken);\par
{\bkmkstart AAAAAAAAPJ}{\bkmkend AAAAAAAAPJ}
00075        {\cf18 char}* processDefinition({\cf17 const} {\cf18 char} *argv);\par
{\bkmkstart AAAAAAAAPK}{\bkmkend AAAAAAAAPK}
00076        {\cf18 char}* activeFlag({\cf17 const} {\cf18 char} *flag, {\cf18 char} *prev);\par
{\bkmkstart AAAAAAAAPL}{\bkmkend AAAAAAAAPL}
00077        {\cf18 char}* inactiveFlag({\cf17 const} {\cf18 char} *flag, {\cf18 char} *prev);\par
{\bkmkstart AAAAAAAAPM}{\bkmkend AAAAAAAAPM}
00078        {\cf18 void}  addToInputs({\cf17 const} {\cf18 char} *arg);\par
{\bkmkstart AAAAAAAAPN}{\bkmkend AAAAAAAAPN}
00079        {\cf18 bool}  updateFlagHelp({\cf17 const} {\cf18 char} *arg, {\cf18 char} *prev);\par
{\bkmkstart AAAAAAAAPO}{\bkmkend AAAAAAAAPO}
00080     \};\par
{\bkmkstart AAAAAAAAPP}{\bkmkend AAAAAAAAPP}
00081 \}\par
}
}